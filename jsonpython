import json
jsonFile = open('json_kafka.json', 'r')
values = json.load(jsonFile)
dictionary_ctoc=values["main-grouping-json
parsed_field1=dictionary_ctoc["Source field"]
# Source field
print(parsed_field1)
jsonFile.close()


https://stackoverflow.com/questions/12934699/selecting-fields-from-json-output
how to call the endpoint to send the data?

ssh to a system, get the output from a command
https://askubuntu.com/questions/917200/how-to-redirect-command-output-from-remote-machine-to-local-file-via-ssh?rq=1

import json

def get_values_from_json():
    jsonFile = open('json_kafka.json', 'r')
    dict_from_json = json.load(jsonFile)
    for primaryKey in dict_from_json:
        if str(primaryKey).startswith("ls-"):
            newPrimaryKey = "{}-v1".format(primaryKey)
            shipper_port = dict_from_json[primaryKey]["ShipperPort"]
            command = "/ctoc/vendor-kafka/bin/kafka-console-consumer.sh --bootstrap-server blabla.com:80 --consumer.config /ctoc/app-common/ssl/kafka_client.properties --topic " + newPrimaryKey + " --from beginning | grep CONFIG"
            print(command)
            print(shipper_port)


get_values_from_json()
==============================================================
import json
import subprocess

def execute_shell_command(shell_command):
    import subprocess
    command_response = subprocess.Popen(shell_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE,
                                        shell=True)
    command_output, command_error = command_response.communicate()
    return command_response.returncode, command_output, command_error
def get_values_from_json():
    jsonString = open('json_kafka.json', 'r')
    count = 0
    dict_from_json = json.load(jsonString)
    for primaryKey in dict_from_json:
        if str(primaryKey).startswith("ls-"):
            newPrimaryKey = "{}-v1".format(primaryKey)
            shipper_port = dict_from_json[primaryKey]["ShipperPort"]
            if count == 2:
                break
            else:

                rakhi = (["/ctoc/vendor-kafka/bin/kafka-console-consumer.sh", "--bootstrap-server blabla.com:80", "--consumer.config", "/ctoc/app-common/ssl/kafka_client.properties", "--topic ", newPrimaryKey , " --from beginning"])

                code, output, error = execute_shell_command(shell_command=rakhi)
                Dict_output = json.load(output)
                parsed_message = Dict_output["message"]
                count += 1
                return parsed_message

get_values_from_json()

==============================================
import json

import subprocess

import socket

import time





def execute_shell_command_timeout(command, timeout):

    p = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    for t in xrange(timeout):

        if p.poll() is not None:

            return p.communicate()

        time.sleep(1)

    p.kill()

    return "killed", "killed by timeout"





def get_values_from_json():

    #kafka_msg = ["ping", "robingautam.com"]

    kafka_msg = ["ls", "-lart"]

    #print(kafka_msg)

    try:

        out, err = execute_shell_command_timeout(kafka_msg,5)

        print out, err


    except Exception as e:

        print (e)



def main():

    get_values_from_json()



main()

